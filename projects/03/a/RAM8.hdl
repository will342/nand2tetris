// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in = load, sel = address, a = write0, b = write1, c = write2, d = write3, e = write4, f = write5, g = write6, h = write7);		

    Register(in = in, load = write0, out = w0);	
    Register(in = in, load = write1, out = w1);	
    Register(in = in, load = write2, out = w2);	
    Register(in = in, load = write3, out = w3);	
    Register(in = in, load = write4, out = w4);	
    Register(in = in, load = write5, out = w5);	
    Register(in = in, load = write6, out = w6);	
    Register(in = in, load = write7, out = w7);	
	
    Mux8Way16(a = w0, b = w1, c = w2, d = w3, e = w4, f = w5, g = w6, h = w7, sel = address, out = out);	


}